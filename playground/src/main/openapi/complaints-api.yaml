openapi: 3.0.0
info:
  title: Cadence Bank Complaint Operations
  version: 1.0.0
  description: API for managing complaint API operations

tags:
  - name: Complaint Operations
    description: Endpoints for managing complaint activities.
  - name: Complaint Task Operations
    description: Endpoints for managing complaint task management.

paths:
  /complaints:
    post:
      summary: Create a Complaint
      description: Creates a complaint. Persist the information in the database and starts the complaint process.
      operationId: complaintCreate
      tags:
        - Complaint Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Complaint'
      responses:
        '200':
          description: Successful complaint creation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintSourceInvalid:
                  summary: Invalid Complaint Format
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "source"
                        message: "Complaint source is invalid"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  /search:
    post:
      summary: Search for a complaint matching the search criteria
      description: GraphQL interface to search for Complaints.
      operationId: ComplaintSearch
      tags:
        - Complaint Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        '200':
          description: Successful complaint search'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintsGraphQLResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                queryInvalid:
                  summary: Invalid Complaint Format
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "query"
                        message: "Query is invalid"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  /tasks/search:
    post:
      summary: Search for a complaint task matching the search criteria
      description: GraphQL interface to search for Complaint Tasks.
      operationId: RetrieveComplaintTasks
      tags:
        - Complaint Task Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLQuery'
      responses:
        '200':
          description: Successful complaint task search'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksGraphQLResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                queryInvalid:
                  summary: Invalid Complaint Format
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "query"
                        message: "Query is invalid"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  /{id}:
    get:
      summary: Retrieve complaint information
      description: Gets a complaint by ID
      operationId: RetrieveComplaint
      tags:
        - Complaint Operations
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the complaint to get
      responses:
        '200':
          description: Successful complaint retrieval'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintIdInvalid:
                  summary: Invalid Complaint Format
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "ID"
                        message: "ID is not an integer"
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintNotFound:
                  summary: NotFound
                  value:
                    errorDescription: "Complaint Not Found."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - message: "Complaint not found"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  /{id}/tasks/{taskId}/complete:
    post:
      summary: Complete a Complaint Task
      description: Completes create task
      operationId: CompleteComplaintTask
      tags:
        - Complaint Task Operations
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the complaint to get
        - in: path
          name: taskId
          schema:
            type: integer
          required: true
          description: Numeric ID of the Task to complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Successful task completion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintStatusInvalid:
                  summary: Invalid Task status
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "status"
                        message: "Task Status is invalid"
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: NotFound
                  value:
                    errorDescription: "Not Found."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - message: "Not found"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  /{id}/tasks/{taskId}/comment:
    post:
      summary: Add a comment to a Complaint Task
      description: Comment a create task
      operationId: ComentComplaintTask
      tags:
        - Complaint Task Operations
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the complaint to get
        - in: path
          name: taskId
          schema:
            type: integer
          required: true
          description: Numeric ID of the Task to complete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Successful task completion'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintStatusInvalid:
                  summary: Invalid Task status
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "status"
                        message: "Task comment is invalid"
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: NotFound
                  value:
                    errorDescription: "Not Found."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - message: "Not found"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
  
  /landing:
    get:
      summary: Retrieve complaint home page
      description: Gets complaints created by iser and task assigned to user
      operationId: HomePage
      tags:
        - Complaint Operations
      responses:
        '200':
          description: Successful landing retrieval'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                errorOcurred:
                  summary: Invalid Complaint Format
                  value:
                    errorDescription: "Validation error(s) have occurred."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - field: "UserID"
                        message: "UserID is not valid"
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                complaintNotFound:
                  summary: NotFound
                  value:
                    errorDescription: "Not Found."
                    errorCode: "CADE-COMPLAINTS-V0x"
                    details:
                      - message: "not found"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                serverError:
                  summary: Internal server error
                  value:
                    errorDescription: "Internal server error has occurred."
                    errorCode: "500"
components:
  parameters:
    UserKey:
      in: header
      name: user_key
      required: true
      schema:
        type: string
        format: char
        minLength: 32
        maxLength: 32
      description: API authentication key used to authorize the request. This should be a 32-character string provided by Cadence Bank for API access.
  headers:
    X-Request-ID:
      description: The Unique Identifier which was optionally sent in the request.
      required: false
      schema:
        type: string
  schemas:
    LandingPage:
      properties:
        complaints:
          type: array
          items:
            "$ref": "#/components/schemas/ComplaintSearchResponse"
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/TaskSearchResponse"
    ComplaintSearchResponse:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for complaint
        type:
          type: string
          maxLength: 20
          description: Complaint type
        description:
          type: string
          description: Description of the complaint
        receivedDate:
          type: string
          format: date
          description: The date the complaint was received
        status:
          type: string
          maxLength: 20
          description: Status on Complaint
        complainant:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for complaint
            fullName:
              type: string
              description: Full Name of the complainant
    TaskSearchResponse:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for complaint
        name:
          type: string
          maxLength: 200
          description: Task name
        description:
          type: string
          description: Task description
        type:
          type: string
          maxLength: 20
          description: Task type
        assignedTo:
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier for complaint
            fullName:
              type: string
              description: Full Name of the complainant
    Complaint:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for complaint
        submittedDate:
          type: string
          format: dateTime
          description: Timestamp when the complaint was submitted to the system
        targetCompletionDate:
          type: string
          format: date
          description: The date the complaint is expected to be resolved
        receivedDate:
          type: string
          format: date
          description: The date the complaint was received
        type:
          type: string
          maxLength: 20
          description: Complaint type
        source:
          type: string
          maxLength: 20
          description: Complaint Source
        description:
          type: string
          description: Description of the complaint
        actionsTaken:
          type: string
          description: Actions taken to resolve complaint
        processInstanceId:
          type: string
          description: Unique identifier of the parent process linked to the complaint
        concernsResolved:
          type: boolean
          description: If the complainant concerns were resolved
        taskCount:
          type: integer
          description: Number of tasks on Complaint
        status:
          type: string
          maxLength: 20
          description: Status on Complaint
        complainant:
          "$ref": "#/components/schemas/Complainant"
        representative:
          "$ref": "#/components/schemas/Representative"
        documents:
          type: array
          items:
            "$ref": "#/components/schemas/Document"
        receivedFromVendor:
          "$ref": "#/components/schemas/Vendor"
        submitedBy:
          "$ref": "#/components/schemas/Employee"
        assignedTo: 
          "$ref": "#/components/schemas/Employee"
        vendorsReferenced:
          type: array
          items:
            "$ref": "#/components/schemas/Vendor"
    Complainant: 
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for complainant
        fullName:
          type: string
          description: Full Name of the complainant
        firstName:
          type: string
          description: First Name of the complainant
          maxLength: 200
        middleName:
          type: string
          description: Middle Name of the complainant
          maxLength: 200
        lastName: 
          type: string
          description: Last name of the complainant
          maxLength: 200
        businessName:
          type: string
          description: Business Name of the  complainant
          maxLength: 200
        accountNumber:
          type: string
          description: Account Number linked to the complainant
          maxLength: 15
        accountType:
          type: string
          description: Account type
          maxLength: 3
        ifxAccountType:
          type: string
          description: IFX account type
          maxLength: 3
        bxsAccountType:
          type: string
          description: BXS AccountType
          maxLength: 5
        customerNumber:
          type: string
          description: Customer number
          maxLength: 20
        contactInfo:
          "$ref": "#/components/schemas/ContactInfo"
    Representative: 
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for representative
        fullName:
          type: string
          description: Full Name of the representative
        firstName:
          type: string
          description: First Name of the representative
          maxLength: 200
        middleName:
          type: string
          description: Middle Name of the representative
          maxLength: 200
        lastName: 
          type: string
          description: Last ame of the representative
          maxLength: 200
        businessName:
          type: string
          description: Business Name of the  representative
          maxLength: 20
        type:
          type: string
          maxLength: 20
          description: Representative Type
        contactInfo:
          "$ref": "#/components/schemas/ContactInfo"
    ContactInfo:
      properties:
        id:
          type: integer
          description: Unique identifier
        phoneNumber:
          type: string
          maxLength: 15
          description: Phone Number
        emailAddress:
          type: string
          maxLength: 200
          description: Email Address
        addressLine1:
          type: string
          maxLength: 200
          description: Address Line 1
        addressLine2:
          type: string
          maxLength: 200
          description: Address Line 2
        addressLine3:
          type: string
          maxLength: 200
          description: Address Line 3
        addressLine4:
          type: string
          maxLength: 200
          description: Address Line 4
        city:
          type: string
          maxLength: 200
          description: City
        zipCode:
          type: string
          maxLength: 10
          description: Zip Code
        state:
          type: string
          maxLength: 2
          description: State
    Document:
      properties:
        id:
          type: integer
          description: Unique identifier
        ownerId:
          type: integer
          description: Unique identifier for complaint
        name:
          type: string
          maxLength: 200
          description: Name of the document uploaded
        uploadedDate:
          type: string
          format: dateTime
          description: Timestamp when the document was submitted to the system
        uploadedBy:
          "$ref": "#/components/schemas/Employee"
        externalId:
          type: string
          maxLength: 200
          description: Unique identifier on the system in which the document is stored
        externalSystem:
          type: string
          maxLength: 20
          description: System on which the document is stored
    Employee:
      properties:
        id:
          type: integer
          description: Unique identifier
        employeeId:
          type: string
          maxLength: 7
          description: Unique identifier of the employee within ActiveDirectory
        fullName:
          type: string
          maxLength: 200
          description: Employee's Name
        emailAddress:
          type: string
          maxLength: 200
          description: Internal employee email address
        rc:
          type: string
          maxLength: 5
          description: Region Code of the employee
        department:
          type: string
          maxLength: 200
          description: Doartnebt of the employee
        manager:
          "$ref": "#/components/schemas/Employee"
    Vendor:
      properties:
        id:
          type: integer
          description: Unique identifier
        name:
          type: string
          maxLength: 200
          description: Vendor name
    Task:
      properties:
        id:
          type: integer
          description: Unique identifier
        name:
          type: string
          maxLength: 200
          description: Task name
        type:
          type: string
          maxLength: 20
          description: Task type
        status:
          type: string
          maxLength: 20
          description: Task Status
        description:
          type: string
          description: Task Description
        assignedTo:
          "$ref": "#/components/schemas/Employee"
        assignedToGroup:
          type: string
          maxLength: 200
          description: Group of users that can claim the task
        targetCompletionDate:
          type: string
          format: date
          description: The date the task is expected to be resolved
        submittedDate:
          type: string
          format: dateTime
          description: Timestamp when the task was submitted to the system
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
    Action:
      properties:
        id:
          type: integer
          description: Unique identifier
        submittedDate:
          type: string
          format: dateTime
          description: Timestamp when the task was submitted to the system
        submittedBy:
          "$ref": "#/components/schemas/Employee"
    Comment:
      properties:
        id:
          type: integer
          description: Unique identifier
        comment:
          type: string
          description: Comment on task
    GraphQLQuery:
      type: "object"
      properties:
        query:
          type: "string"
    ComplaintsGraphQLResponse:
      type: "object"
      properties:
        data:
          type: "object"
          properties:
            complaints:
              type: array
              items:
                "$ref": "#/components/schemas/ComplaintSearchResponse"
    TasksGraphQLResponse:
      type: "object"
      properties:
        data:
          type: "object"
          properties:
            tasks:
              type: array
              items:
                "$ref": "#/components/schemas/TaskSearchResponse"
    Error:
      type: object
      properties:
        errorDescription:
          type: string
          description: A high level description of what went wrong.
        errorCode:
          type: string
          description: Matches the HTTP error code.
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
        activated:
          type: boolean
          description: Indicates whether the card activation was successful, applicable only for card activation errors.
        pinChanged:
          type: boolean
          description: Indicates whether the PIN change was successful, applicable only for PIN change errors.
        verified:
          type: boolean
          description: Indicates whether the CVV verification was successful, applicable only for CVV verification errors.
      required:
        - errorDescription
        - errorCode